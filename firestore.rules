rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ğŸ‘¤ Users peuvent lire/Ã©crire leur propre profil
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // ğŸ‘¥ Admins peuvent gÃ©rer tous les utilisateurs
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // ğŸ’¼ EmployÃ©s - Admins et Managers peuvent tout faire
    match /employees/{employeeId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'manager'];
    }
    
    // ğŸ’° Transactions - Admins, Managers et Comptables
    match /transactions/{transactionId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'manager'] ||
         'accounting' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.permissions);
    }
    
    // ğŸ”’ Tout le reste interdit par dÃ©faut
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 