rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // 🔐 FONCTION HELPER: Vérifier si l'utilisateur est authentifié
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 🔐 FONCTION HELPER: Obtenir les données utilisateur
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // 🔐 FONCTION HELPER: Vérifier le rôle admin
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             getUserData().role == 'admin';
    }
    
    // 🔐 FONCTION HELPER: Vérifier le rôle manager ou admin
    function isManagerOrAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             getUserData().role in ['admin', 'manager'];
    }
    
    // 🔐 FONCTION HELPER: Vérifier les permissions accounting
    function hasAccountingPermission() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             (getUserData().role in ['admin', 'manager'] ||
              'accounting' in getUserData().get('permissions', []));
    }
    
    // 👤 USERS COLLECTION - Gestion des utilisateurs
    match /users/{userId} {
      // Lecture: utilisateur peut lire ses propres infos OU admin peut lire tous les utilisateurs
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      
      // Écriture: permissions admin requises (sauf création)
      allow write: if isAdmin();
      
      // 🆕 CRÉATION: permettre la création lors de l'inscription
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // 📝 PROFILES COLLECTION - Profils utilisateurs étendus
    match /profiles/{profileId} {
      // Lecture: utilisateur peut lire son propre profil OU admin peut lire tous les profils
      allow read: if isAuthenticated() && (request.auth.uid == profileId || isAdmin());
      
      // Écriture: utilisateur peut créer/modifier son propre profil
      allow write: if isAuthenticated() && request.auth.uid == profileId;
      
      // 🆕 CRÉATION: permettre la création lors de l'inscription
      allow create: if request.auth != null && request.auth.uid == profileId;
    }
    
    // 💼 EMPLOYEES COLLECTION - Gestion des employés
    match /employees/{employeeId} {
      // Lecture: tous les utilisateurs authentifiés (pour voir la liste)
      allow read: if isAuthenticated();
      
      // Écriture: seulement admin et manager
      allow write: if isManagerOrAdmin();
    }
    
    // 💰 TRANSACTIONS COLLECTION - Transactions financières
    match /transactions/{transactionId} {
      // Lecture et écriture: permissions accounting requises
      allow read, write: if hasAccountingPermission();
    }
    
    // 🛠️ SERVICE ITEMS COLLECTION - Catalogue des services et prix
    match /serviceItems/{serviceItemId} {
      // Lecture: tous les utilisateurs authentifiés (pour voir les prix)
      allow read: if isAuthenticated();
      
      // Écriture: permissions accounting requises
      allow write: if hasAccountingPermission();
    }
    
    // 📊 SERVICE TRANSACTIONS COLLECTION - Historique des services
    match /serviceTransactions/{serviceTransactionId} {
      // Lecture: tous les utilisateurs authentifiés (pour voir l'historique)
      allow read: if isAuthenticated();
      
      // Écriture: permissions accounting requises
      allow write: if hasAccountingPermission();
    }
    
    // 🎯 BONUS CONFIGS COLLECTION - Configurations de primes par grade
    match /bonus_configs/{bonusConfigId} {
      // Lecture: tous les utilisateurs authentifiés (pour calculs de primes)
      allow read: if isAuthenticated();
      
      // Écriture: permissions accounting requises (gestion des primes)
      allow write: if hasAccountingPermission();
    }
    
    // 🗄️ ACCOUNTING BACKUPS COLLECTION - Sauvegardes comptabilité
    match /accounting_backups/{backupId} {
      // Seuls les admins peuvent gérer les sauvegardes
      allow read, write: if isAdmin();
    }
    
    // 📋 REPORTS COLLECTION - Rapports et statistiques
    match /reports/{reportId} {
      // Lecture: permissions accounting
      allow read: if hasAccountingPermission();
      
      // Écriture: admin seulement
      allow write: if isAdmin();
    }
    
    // 🔧 SETTINGS COLLECTION - Configuration de l'application
    match /settings/{settingId} {
      // Lecture: tous les utilisateurs authentifiés
      allow read: if isAuthenticated();
      
      // Écriture: admin seulement
      allow write: if isAdmin();
    }
    
    // 📝 LOGS COLLECTION - Logs d'activité
    match /logs/{logId} {
      // Lecture: admin seulement
      allow read: if isAdmin();
      
      // Écriture: tous les utilisateurs authentifiés (pour créer des logs)
      allow create: if isAuthenticated();
      
      // Pas de modification ou suppression des logs
      allow update, delete: if false;
    }
    
    // 🔒 RÈGLE PAR DÉFAUT: Tout le reste est interdit
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 